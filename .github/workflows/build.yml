name: build

on:
  push:

jobs:
  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            release_url.txt
          draft: true
          prerelease: false
          body: |
            Commit ${{ github.sha }}
            ${{ github.event.commits[0].message }}

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: pyinstaller --onefile --add-data "*.png:." --add-data "*.txt:." --hidden-import pkg_resources.py2_warn --name Image2MCBlock-macos --additional-hooks-dir=. main.py
            OUT_FILE_NAME: Image2MCBlock-macos
            ASSET_MIME: application/octet-stream
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller --onefile --add-data "*.png:." --add-data "*.txt:." --hidden-import pkg_resources.py2_warn --name Image2MCBlock-windows --additional-hooks-dir=. main.py
            OUT_FILE_NAME: Image2MCBlock-windows.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
          - os: ubuntu-latest
            TARGET: x86_64-linux-gnu
            CMD_BUILD: pyinstaller --onefile --add-data "*.png:." --add-data "*.txt:." --hidden-import pkg_resources.py2_warn --name Image2MCBlock-linux --additional-hooks-dir=. main.py
            OUT_FILE_NAME: Image2MCBlock-linux
            ASSET_MIME: application/octet-stream
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
      - name: Install pyinstaller
        run: python -m pip install pyinstaller
      - name: Build with pyinstaller for ${{ matrix.TARGET }}
        run: ${{ matrix.CMD_BUILD }}
      - name: Save Release URL File
        run: echo "::set-output name=release_url::${{ steps.create_release.outputs.upload_url }}" >> ${{ github.workspace }}/release_url.txt
      - name: Upload Release Asset
        id: upload_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.createrelease.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/dist/${{ matrix.OUT_FILE_NAME }}
          asset_name: ${{ matrix.OUT_FILE_NAME }}
          asset_content_type: ${{ matrix.ASSET_MIME }}
      - name: Upload Release URL File
        id: upload_url_file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.createrelease.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/release_url.txt
          asset_name: release_url.txt
          asset_content_type: text/plain
