name: build
on: push

jobs:
  get-next-release-number:
    name: Get Next Release Number
    runs-on: ubuntu-latest
    steps:
      - name: Check Previous Releases
        id: check_releases
        uses: actions/github-script@v4
        with:
          script: |
            const response = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const releases = response.data;
            const releaseNames = releases.map((release) => release.name);
            const numericalNames = releaseNames
              .filter((name) => /^[0-9]+$/.test(name))
              .map((name) => parseInt(name, 10));

            const nextReleaseNumber = numericalNames.length === 0
              ? 1
              : Math.max(...numericalNames) + 1;

            console.log(`::set-output name=next_release_number::${nextReleaseNumber}`);
          token: ${{ secrets.GITHUB_TOKEN }}

  createrelease:
    name: Create Release
    needs: get-next-release-number
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.get-next-release-number.outputs.next_release_number }}
          files: |
            dist/*
          draft: true
          prerelease: false

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: pyinstaller --onefile --add-data "*.png:." --add-data "*.txt:." --hidden-import pkg_resources.py2_warn --name Image2MCBlock-macos --additional-hooks-dir=. main.py
            OUT_FILE_NAME: Image2MCBlock-macos
            ASSET_MIME: application/octet-stream
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller --onefile --add-data "*.png;." --add-data "*.txt;." --hidden-import pkg_resources.py2_warn --name Image2MCBlock-windows --additional-hooks-dir=. main.py

            OUT_FILE_NAME: Image2MCBlock-windows.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
          - os: ubuntu-latest
            TARGET: x86_64-linux-gnu
            CMD_BUILD: pyinstaller --onefile --add-data "*.png:." --add-data "*.txt:." --hidden-import pkg_resources.py2_warn --name Image2MCBlock-linux --additional-hooks-dir=. main.py
            OUT_FILE_NAME: Image2MCBlock-linux
            ASSET_MIME: application/octet-stream
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
      - name: Install pyinstaller
        run: python -m pip install pyinstaller
      - name: Build package
        run: |
          ${{ matrix.CMD_BUILD }}
          mv dist/${{ matrix.OUT_FILE_NAME }} dist/Image2MCBlock
      - name: Upload package
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/Image2MCBlock
          asset_name: Image2MCBlock-${{ matrix.TARGET }}
          asset_content_type: ${{ matrix.ASSET_MIME }}
